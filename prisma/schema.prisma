generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table
model users {
  id                BigInt              @id @default(autoincrement())
  email             String              @unique @db.VarChar(255)
  photo_url         String?             @db.Text
  oauth             oauth?
  seat_reservations seat_reservations[]
}

// OAuth table with calendar consent data
model oauth {
  user_id BigInt @id
  key     String @unique @db.VarChar(255)

  // Calendar consent fields
  googleAccessToken  String?   @db.Text
  googleRefreshToken String?   @db.Text
  calendarConsent    Boolean   @default(false)
  consentGrantedAt   DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  users users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "oauth_user_fkey")
}

// Room types
model room_types {
  id    BigInt  @id @default(autoincrement())
  type  String  @unique @db.VarChar(50)
  rooms rooms[]
}

// Rooms
model rooms {
  id           BigInt     @id @default(autoincrement())
  name         String     @db.VarChar(100)
  room_type_id BigInt
  room_types   room_types @relation(fields: [room_type_id], references: [id], onUpdate: NoAction, map: "rooms_room_type_fkey")
  seats        seats[]
}

// Seats
model seats {
  id                BigInt              @id @default(autoincrement())
  room_id           BigInt
  rooms             rooms               @relation(fields: [room_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "seats_rooms_fkey")
  seat_reservations seat_reservations[]
}

// Seat reservations
model seat_reservations {
  id                  BigInt   @id @default(autoincrement())
  seat_id             BigInt
  user_id             BigInt
  date_of_reservation DateTime @db.Date
  seats               seats    @relation(fields: [seat_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "sreservation_seats_fkey")
  users               users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "sreservation_users_fkey")

  @@unique([seat_id, date_of_reservation], map: "sreservation_seats_date_unique")
}
